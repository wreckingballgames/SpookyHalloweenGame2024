extends Node
## The EventBus is an autoload Node responsible for centralizing all signals across the entire game.
##
## Note that all signals related to characters or controllers pass along an id. This is so that each system
## in the game knows which character is acted upon, rather than acting on all connected to that signal.

#region Character signals

# CharacterController
## Signal that a CharacterController's unique id has been set.
signal id_set(id: int)
## Signal that movement data has been generated by a CharacterController. Passes along the movement data.
signal movement_dispatched(id: int, movement_data: Vector2)
## Signal that a CharacterController has attempted to perform an attack.
signal attack_performed(id: int)
## Signal that a CharacterController has attempted to use an item.
signal item_used(id: int)

# PlayerController
## Signal that a PlayerController has requested to pause the game.
signal pause_requested(id: int)
## Signal that a PlayerController has requested to unpause the game.
signal unpause_requested(id: int)
## Signal that a PlayerController has requested to cycle up through the PlayerCharacter's weapon slots.
signal weapon_slots_cycled_up(id: int)
## Signal that a PlayerController has requested to cycle down through the PlayerCharacter's weapon slots.
signal weapon_slots_cycled_down(id: int)
## Signal that a PlayerController has requested to cycle up through the PlayerCharacter's item slots.
signal item_slots_cycled_up(id: int)
## Signal that a PlayerController has requested to cycle down through the PlayerCharacter's item slots.
signal item_slots_cycled_down(id: int)

# CharacterMovementComponent

# CharacterLifeComponent
## Signal that a Character's current hit points remaining value has been updated. Passes along the new HP value.
signal hp_updated(id: int, new_hp: int)
## Signal that a Character's modified maximum hit points value has been updated. Passes along the new maximum HP value.
signal max_hp_updated(id: int, new_max_hp: int)
## Signal that a Character has died. Passes along the unique identifier of the Character (or pseudo-Character) that killed them.
signal character_died(id: int, killer_id: int)

# CharacterHitDetectorComponent
## Signal that a Character has been hit by a bullet. Passes along the name of the attacker, the weapon icon of the weapon
## used, and the attack power value.
signal attack_connected(id: int, attacker_name: String, weapon_icon: Texture, attack_power: int)

# CharacterInventoryComponent
## Signal that Character has equipped a new weapon. Passes along a reference to the Weapon.
signal weapon_equipped(id: int, weapon: Weapon)

# Pickup
## Signal that a Character has picked up an Item. Passes along the Item
## and how many are being picked up.
signal item_picked_up(id: int, item: Item, amount: int)
## Signal that a Character has picked up a Weapon. Passes along the WeaponStatistics.
signal weapon_picked_up(id: int, weapon_stats: WeaponStatistics)

#endregion
